// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  EthereumCall,
  EthereumEvent,
  SmartContract,
  EthereumValue,
  JSONValue,
  TypedMap,
  Entity,
  EthereumTuple,
  Bytes,
  Address,
  BigInt,
  CallResult
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends EthereumEvent {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class SummonUberMinion extends EthereumEvent {
  get params(): SummonUberMinion__Params {
    return new SummonUberMinion__Params(this);
  }
}

export class SummonUberMinion__Params {
  _event: SummonUberMinion;

  constructor(event: SummonUberMinion) {
    this._event = event;
  }

  get uberminion(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get dao(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get uberHaus(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get controller(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get delegateRewardFactor(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get desc(): string {
    return this._event.parameters[5].value.toString();
  }

  get name(): string {
    return this._event.parameters[6].value.toString();
  }
}

export class UberMinionFactory extends SmartContract {
  static bind(address: Address): UberMinionFactory {
    return new UberMinionFactory("UberMinionFactory", address);
  }

  ourMinions(param0: Address): Address {
    let result = super.call("ourMinions", [EthereumValue.fromAddress(param0)]);

    return result[0].toAddress();
  }

  try_ourMinions(param0: Address): CallResult<Address> {
    let result = super.tryCall("ourMinions", [
      EthereumValue.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", []);

    return result[0].toAddress();
  }

  try_owner(): CallResult<Address> {
    let result = super.tryCall("owner", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  summonUberHausMinion(
    _dao: Address,
    _uberHaus: Address,
    _controller: Address,
    _delegateRewardFactor: BigInt,
    _desc: string
  ): Address {
    let result = super.call("summonUberHausMinion", [
      EthereumValue.fromAddress(_dao),
      EthereumValue.fromAddress(_uberHaus),
      EthereumValue.fromAddress(_controller),
      EthereumValue.fromUnsignedBigInt(_delegateRewardFactor),
      EthereumValue.fromString(_desc)
    ]);

    return result[0].toAddress();
  }

  try_summonUberHausMinion(
    _dao: Address,
    _uberHaus: Address,
    _controller: Address,
    _delegateRewardFactor: BigInt,
    _desc: string
  ): CallResult<Address> {
    let result = super.tryCall("summonUberHausMinion", [
      EthereumValue.fromAddress(_dao),
      EthereumValue.fromAddress(_uberHaus),
      EthereumValue.fromAddress(_controller),
      EthereumValue.fromUnsignedBigInt(_delegateRewardFactor),
      EthereumValue.fromString(_desc)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  template(): Address {
    let result = super.call("template", []);

    return result[0].toAddress();
  }

  try_template(): CallResult<Address> {
    let result = super.tryCall("template", []);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }

  uberMinions(param0: BigInt): Address {
    let result = super.call("uberMinions", [
      EthereumValue.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_uberMinions(param0: BigInt): CallResult<Address> {
    let result = super.tryCall("uberMinions", [
      EthereumValue.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new CallResult();
    }
    let value = result.value;
    return CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends EthereumCall {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _template(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends EthereumCall {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SummonUberHausMinionCall extends EthereumCall {
  get inputs(): SummonUberHausMinionCall__Inputs {
    return new SummonUberHausMinionCall__Inputs(this);
  }

  get outputs(): SummonUberHausMinionCall__Outputs {
    return new SummonUberHausMinionCall__Outputs(this);
  }
}

export class SummonUberHausMinionCall__Inputs {
  _call: SummonUberHausMinionCall;

  constructor(call: SummonUberHausMinionCall) {
    this._call = call;
  }

  get _dao(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _uberHaus(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _controller(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _delegateRewardFactor(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _desc(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class SummonUberHausMinionCall__Outputs {
  _call: SummonUberHausMinionCall;

  constructor(call: SummonUberHausMinionCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall extends EthereumCall {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
